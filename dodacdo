PVC:

apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
-----
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: task-pv-pod
spec:
  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: task-pv-claim
  containers:
    - name: task-pv-container
      image: nginx
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: config
          subPath: html
        - mountPath: "/etc/nginx.conf"
          name: config
          subPath: nginx.conf




kubectl exec -it task-pv-pod -- /bin/bash
kubectl get pvc task-pv-claim


problemo przy iptablesach:

[root@energis ~]# k get pods -A
NAMESPACE     NAME                                      READY   STATUS             RESTARTS       AGE
kube-system   coredns-66bcf65bb8-pbdd5                  0/1     Running            3 (44s ago)    26m
kube-system   calico-node-r2mq7                         1/1     Running            3 (44s ago)    27m
kube-system   calico-kube-controllers-cc54b5dcd-7dsqp   0/1     CrashLoopBackOff   13 (14s ago)   27m

nie wstają przy DROP na INPUT





RBAC

openssl genrsa -out mareksr.key 2048
openssl req -new -key mareksr.key  -out mareksr.csr -subj "/CN=mareksr/O=finance"
openssl x509 -req -in mareksr.csr -CA ca.crt -CAkey ca.key --CAcreateserial -out mareksr.crt  -days 365
k --kubeconfig mareksr.kubeconfig config set-cluster microk8s-cluster --server https://192.168.10.78:16443 --certificate-authority=ca.cert
k --kubeconfig mareksr.kubeconfig config set-credentials mareksr --client-certificate mareksr.crt --client-key mareksr.key
k --kubeconfig mareksr.kubeconfig config set-context mareksr-kubernetes --cluster microk8s-cluster --namespace finance --user mareksr
kubectl --kubeconfig mareksr.kubeconfig get pods

k create role john-finance --verb=get,list --resource=pods --namespace finance
k -n finance get role john-finance -o yaml

k create rolebinding john-finance-rolebinding --role=john-finance --user=mareksr --namespace finance
k -n finance get rolebinding john-finance-rolebinding -o yaml


 microk8s enable rbac
 k -n finance edit role john-finance

k get rolebinding -A


k create rolebinding finance-rolebinding --role=john-finance --group=finance --namespace finance

   
   1  vi /etc/profile
    2  exit
    3  k get all
    4  ls
    5   git clone https://github.com/nginxinc/kubernetes-ingress.git --branch v2.2.1
    6  cd kubernetes-ingress/deployments
    7  kubectl apply -f common/ns-and-sa.yaml
    8  kubectl apply -f rbac/rbac.yaml
    9  kubectl apply -f rbac/ap-rbac.yaml
   10  kubectl apply -f rbac/apdos-rbac.yaml
   11  kubectl apply -f common/default-server-secret.yaml
   12  kubectl apply -f common/nginx-config.yaml
   13  vi common/ingress-class.yaml
   14  kubectl apply -f common/ingress-class.yaml
   15  vi common/ingress-class.yaml
   16  kubectl apply -f common/ingress-class.yaml
   17  vi common/ingress-class.yaml
   18  kubectl apply -f common/ingress-class.yaml
   19  vi common/ingress-class.yaml
   20  kubectl apply -f common/ingress-class.yaml
 
   26  kubectl apply -f deployment/nginx-ingress.yaml
   27  kubectl apply -f daemon-set/nginx-ingress.yaml
 

w pliku:

dodać na końcu cmd arg: /root/kubernetes-ingress/deployments/daemon-set/nginx-ingress.yaml

 - -enable-custom-resources=false





   
   96  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
   97  ls
   98  sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx
   99   ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
  100  ln -s /opt/kubectx/kubens /usr/local/bin/kubens
  101  /usr/local/bin/kubens
  102  cd /opt/kubectx/
  103  ls
  104  ls /usr/local/bin/kubens
  105  s /usr/local/bin/kubens
  106   /usr/local/bin/kubens
  107  kubectl
  108   /usr/local/bin/kubens
  109  kubens
  110  cd
  111  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  112  vi /etc/profile
  113  exit
  114  ls
  115   curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  116  install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  117  /usr/local/bin/kubectl
  118  /usr/local/bin/kubectl
  119  exit
  120  vi /etc/profile
  121  exit
  122  kubectl
  123  kubectl get all
  124  microk8s config
  125  cd
  126  mkdir .kube
  127  cd .kube/
  128  microk8s config > config
  129  kubectl get all
  130  ls
  131  kubectl get all
